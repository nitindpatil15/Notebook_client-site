{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nitin Patil\\\\OneDrive\\\\Desktop\\\\reactjs\\\\inotebook\\\\Client-site\\\\src\\\\context\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const notesinitial = [];\n  const [notes, setNotes] = useState(notesinitial);\n\n  // Get all Notes\n  const getnotes = async () => {\n    // API call\n    try {\n      const response = await fetch(`${host}/api/notes/fetchallnotes/`, {\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"auth-token\": localStorage.getItem('token')\n        }\n      });\n      const json = await response.json();\n      setNotes(json);\n      // props.showAlert( json.length===0?'No Notes to Display':'All Notes Fetched','success')\n    } catch (error) {\n      props.showAlert(\"Error in Fetchung Notes\", \"danger\");\n      console.log(error, \": Failed to Fetch API\");\n    }\n  };\n\n  // Add Note\n  const addnote = async (title, description, tag) => {\n    // API call\n    try {\n      const response = await fetch(`${host}/api/notes/addnotes/`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"auth-token\": localStorage.getItem('token')\n        },\n        body: JSON.stringify({\n          title,\n          description,\n          tag\n        })\n      });\n      const note = await response.json();\n      //  Logic for Adding Notes\n      setNotes(notes.concat(note));\n      props.showAlert(\"Added New Note\", \"success\");\n    } catch (error) {\n      alert(\"Error in Adding Note\");\n      console.log(error, \": Failed to Fetch API\");\n    }\n  };\n\n  // delete Note\n  const deletenote = async id => {\n    // API call\n    try {\n      const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"auth-token\": localStorage.getItem('token')\n        }\n      });\n      const json = await response.json();\n      console.log(json);\n      props.showAlert(\"Deleted Note from Notes\", \"success\");\n    } catch (error) {\n      alert(\"Error in Adding Note\");\n      console.log(error, \": Failed to Fetch API\");\n    }\n    // logic for Deleting Notes \n    console.log(\"Deleting the note with id: \" + id);\n    const newnotes = notes.filter(notes => {\n      return notes._id !== id;\n    });\n    setNotes(newnotes);\n  };\n\n  // Update Note\n  const updatenote = async (id, title, description, tag) => {\n    // API call\n    try {\n      const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"auth-token\": localStorage.getItem('token')\n        },\n        body: JSON.stringify({\n          id,\n          title,\n          description,\n          tag\n        })\n      });\n      const json = await response.json();\n      console.log(json);\n      props.showAlert(\"Updated Existing Note\", \"success\");\n    } catch (error) {\n      alert(\"Error in updating the Note\");\n      console.log(error, \": Failed to Fetch API\");\n    }\n    // Logic for Updating Notes\n    let newNotes = JSON.parse(JSON.stringify(notes));\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    console.log(newNotes);\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      setNotes,\n      addnote,\n      deletenote,\n      updatenote,\n      getnotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"lCpSlwx1esUeipe+iG9Pc2Zry6g=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","useState","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesinitial","notes","setNotes","getnotes","response","fetch","method","headers","localStorage","getItem","json","error","showAlert","console","log","addnote","title","description","tag","body","JSON","stringify","note","concat","alert","deletenote","id","newnotes","filter","_id","updatenote","newNotes","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Nitin Patil/OneDrive/Desktop/reactjs/inotebook/Client-site/src/context/NoteState.js"],"sourcesContent":["import NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\n\nconst NoteState = (props) => {\n  const host = \"http://localhost:5000\";\n  const notesinitial = [];\n  const [notes, setNotes] = useState(notesinitial);\n\n  // Get all Notes\n  const getnotes = async () => {\n    // API call\n    try {\n      const response = await fetch(`${host}/api/notes/fetchallnotes/`, {\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"auth-token\":localStorage.getItem('token'),\n        },\n      });\n      const json = await response.json();\n      setNotes(json);\n      // props.showAlert( json.length===0?'No Notes to Display':'All Notes Fetched','success')\n    } catch (error) {\n      props.showAlert(\"Error in Fetchung Notes\",\"danger\");\n      console.log(error, \": Failed to Fetch API\");\n    }\n  };\n\n  // Add Note\n  const addnote = async (title, description, tag) => {\n    // API call\n    try {\n      const response = await fetch(`${host}/api/notes/addnotes/`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"auth-token\":localStorage.getItem('token'),\n        },\n        body: JSON.stringify({ title, description, tag }),\n      });\n      const note =await response.json();\n      //  Logic for Adding Notes\n      setNotes(notes.concat(note));\n      props.showAlert(\"Added New Note\",\"success\")\n    } catch (error) {\n      alert(\"Error in Adding Note\");\n      console.log(error, \": Failed to Fetch API\");\n    }\n    \n  };\n\n  // delete Note\n  const deletenote = async (id) => {\n    // API call\n    try {\n      const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"auth-token\":localStorage.getItem('token'),\n        },\n      });\n      const json =await response.json();\n      console.log(json);\n      props.showAlert(\"Deleted Note from Notes\" ,\"success\")\n    } catch (error) {\n      alert(\"Error in Adding Note\");\n      console.log(error, \": Failed to Fetch API\");\n    }\n    // logic for Deleting Notes \n    console.log(\"Deleting the note with id: \" + id);\n    const newnotes = notes.filter((notes) => {\n      return notes._id !== id;\n    });\n    setNotes(newnotes);\n  };\n\n\n  // Update Note\n  const updatenote = async (id, title, description, tag) => {\n    // API call\n    try {\n      const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"auth-token\":localStorage.getItem('token'),\n        },\n        body: JSON.stringify({ id, title, description, tag }),\n      });\n      const json = await response.json();\n      console.log(json);\n      props.showAlert(\"Updated Existing Note\",\"success\")\n    } catch (error) {\n      alert(\"Error in updating the Note\");\n      console.log(error, \": Failed to Fetch API\");\n    }\n    // Logic for Updating Notes\n    let newNotes = JSON.parse(JSON.stringify(notes))\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    console.log(newNotes)\n    setNotes(newNotes)\n  };\n\n  return (\n    <NoteContext.Provider\n      value={{ notes, setNotes, addnote, deletenote, updatenote, getnotes }}\n    >\n      {props.children}\n    </NoteContext.Provider>\n  );\n};\nexport default NoteState;\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAMC,IAAI,GAAG,uBAAuB;EACpC,MAAMC,YAAY,GAAG,EAAE;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACO,YAAY,CAAC;;EAEhD;EACA,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,2BAA0B,EAAE;QAC/DO,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,YAAY,EAACC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC3C;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCR,QAAQ,CAACQ,IAAI,CAAC;MACd;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdd,KAAK,CAACe,SAAS,CAAC,yBAAyB,EAAC,QAAQ,CAAC;MACnDC,OAAO,CAACC,GAAG,CAACH,KAAK,EAAE,uBAAuB,CAAC;IAC7C;EACF,CAAC;;EAED;EACA,MAAMI,OAAO,GAAG,MAAAA,CAAOC,KAAK,EAAEC,WAAW,EAAEC,GAAG,KAAK;IACjD;IACA,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,sBAAqB,EAAE;QAC1DO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,YAAY,EAACC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC3C,CAAC;QACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEL,KAAK;UAAEC,WAAW;UAAEC;QAAI,CAAC;MAClD,CAAC,CAAC;MACF,MAAMI,IAAI,GAAE,MAAMlB,QAAQ,CAACM,IAAI,CAAC,CAAC;MACjC;MACAR,QAAQ,CAACD,KAAK,CAACsB,MAAM,CAACD,IAAI,CAAC,CAAC;MAC5BzB,KAAK,CAACe,SAAS,CAAC,gBAAgB,EAAC,SAAS,CAAC;IAC7C,CAAC,CAAC,OAAOD,KAAK,EAAE;MACda,KAAK,CAAC,sBAAsB,CAAC;MAC7BX,OAAO,CAACC,GAAG,CAACH,KAAK,EAAE,uBAAuB,CAAC;IAC7C;EAEF,CAAC;;EAED;EACA,MAAMc,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B;IACA,IAAI;MACF,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,yBAAwB2B,EAAG,EAAC,EAAE;QACjEpB,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,YAAY,EAACC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC3C;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAE,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;MACjCG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACjBb,KAAK,CAACe,SAAS,CAAC,yBAAyB,EAAE,SAAS,CAAC;IACvD,CAAC,CAAC,OAAOD,KAAK,EAAE;MACda,KAAK,CAAC,sBAAsB,CAAC;MAC7BX,OAAO,CAACC,GAAG,CAACH,KAAK,EAAE,uBAAuB,CAAC;IAC7C;IACA;IACAE,OAAO,CAACC,GAAG,CAAC,6BAA6B,GAAGY,EAAE,CAAC;IAC/C,MAAMC,QAAQ,GAAG1B,KAAK,CAAC2B,MAAM,CAAE3B,KAAK,IAAK;MACvC,OAAOA,KAAK,CAAC4B,GAAG,KAAKH,EAAE;IACzB,CAAC,CAAC;IACFxB,QAAQ,CAACyB,QAAQ,CAAC;EACpB,CAAC;;EAGD;EACA,MAAMG,UAAU,GAAG,MAAAA,CAAOJ,EAAE,EAAEV,KAAK,EAAEC,WAAW,EAAEC,GAAG,KAAK;IACxD;IACA,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,yBAAwB2B,EAAG,EAAC,EAAE;QACjEpB,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,YAAY,EAACC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC3C,CAAC;QACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEK,EAAE;UAAEV,KAAK;UAAEC,WAAW;UAAEC;QAAI,CAAC;MACtD,CAAC,CAAC;MACF,MAAMR,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACjBb,KAAK,CAACe,SAAS,CAAC,uBAAuB,EAAC,SAAS,CAAC;IACpD,CAAC,CAAC,OAAOD,KAAK,EAAE;MACda,KAAK,CAAC,4BAA4B,CAAC;MACnCX,OAAO,CAACC,GAAG,CAACH,KAAK,EAAE,uBAAuB,CAAC;IAC7C;IACA;IACA,IAAIoB,QAAQ,GAAGX,IAAI,CAACY,KAAK,CAACZ,IAAI,CAACC,SAAS,CAACpB,KAAK,CAAC,CAAC;IAChD,KAAK,IAAIgC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGF,QAAQ,CAACG,MAAM,EAAED,KAAK,EAAE,EAAE;MACpD,MAAME,OAAO,GAAGJ,QAAQ,CAACE,KAAK,CAAC;MAC/B,IAAIE,OAAO,CAACN,GAAG,KAAKH,EAAE,EAAE;QACtBK,QAAQ,CAACE,KAAK,CAAC,CAACjB,KAAK,GAAGA,KAAK;QAC7Be,QAAQ,CAACE,KAAK,CAAC,CAAChB,WAAW,GAAGA,WAAW;QACzCc,QAAQ,CAACE,KAAK,CAAC,CAACf,GAAG,GAAGA,GAAG;QACzB;MACF;IACF;IACAL,OAAO,CAACC,GAAG,CAACiB,QAAQ,CAAC;IACrB7B,QAAQ,CAAC6B,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEpC,OAAA,CAACH,WAAW,CAAC4C,QAAQ;IACnBC,KAAK,EAAE;MAAEpC,KAAK;MAAEC,QAAQ;MAAEa,OAAO;MAAEU,UAAU;MAAEK,UAAU;MAAE3B;IAAS,CAAE;IAAAmC,QAAA,EAErEzC,KAAK,CAACyC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAAC5C,EAAA,CApHIF,SAAS;AAAA+C,EAAA,GAAT/C,SAAS;AAqHf,eAAeA,SAAS;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}