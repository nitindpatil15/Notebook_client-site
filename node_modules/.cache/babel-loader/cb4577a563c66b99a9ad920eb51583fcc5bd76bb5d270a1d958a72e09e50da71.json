{"ast":null,"code":"import NoteContext from\"./noteContext\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const NoteState=props=>{const host=\"http://localhost:5000\";const notesinitial=[];const[notes,setNotes]=useState(notesinitial);// Get all Notes\nconst getnotes=async()=>{// API call\ntry{const response=await fetch(\"\".concat(host,\"/api/notes/fetchallnotes/\"),{method:\"GET\",headers:{\"content-type\":\"application/json\",\"auth-token\":localStorage.getItem('token')}});const json=await response.json();setNotes(json);// props.showAlert( json.length===0?'No Notes to Display':'All Notes Fetched','success')\n}catch(error){props.showAlert(\"Error in Fetchung Notes\",\"danger\");console.log(error,\": Failed to Fetch API\");}};// Add Note\nconst addnote=async(title,description,tag)=>{// API call\ntry{const response=await fetch(\"\".concat(host,\"/api/notes/addnotes/\"),{method:\"POST\",headers:{\"content-type\":\"application/json\",\"auth-token\":localStorage.getItem('token')},body:JSON.stringify({title,description,tag})});const note=await response.json();//  Logic for Adding Notes\nsetNotes(notes.concat(note));props.showAlert(\"Added New Note\",\"success\");}catch(error){alert(\"Error in Adding Note\");console.log(error,\": Failed to Fetch API\");}};// delete Note\nconst deletenote=async id=>{// API call\ntry{const response=await fetch(\"\".concat(host,\"/api/notes/deletenote/\").concat(id),{method:\"DELETE\",headers:{\"content-type\":\"application/json\",\"auth-token\":localStorage.getItem('token')}});const json=await response.json();console.log(json);props.showAlert(\"Deleted Note from Notes\",\"success\");}catch(error){alert(\"Error in Adding Note\");console.log(error,\": Failed to Fetch API\");}// logic for Deleting Notes \nconsole.log(\"Deleting the note with id: \"+id);const newnotes=notes.filter(notes=>{return notes._id!==id;});setNotes(newnotes);};// Update Note\nconst updatenote=async(id,title,description,tag)=>{// API call\ntry{const response=await fetch(\"\".concat(host,\"/api/notes/updatenote/\").concat(id),{method:\"PUT\",headers:{\"content-type\":\"application/json\",\"auth-token\":localStorage.getItem('token')},body:JSON.stringify({id,title,description,tag})});const json=await response.json();console.log(json);props.showAlert(\"Updated Existing Note\",\"success\");}catch(error){alert(\"Error in updating the Note\");console.log(error,\": Failed to Fetch API\");}// Logic for Updating Notes\nlet newNotes=JSON.parse(JSON.stringify(notes));for(let index=0;index<newNotes.length;index++){const element=newNotes[index];if(element._id===id){newNotes[index].title=title;newNotes[index].description=description;newNotes[index].tag=tag;break;}}console.log(newNotes);setNotes(newNotes);};return/*#__PURE__*/_jsx(NoteContext.Provider,{value:{notes,setNotes,addnote,deletenote,updatenote,getnotes},children:props.children});};export default NoteState;","map":{"version":3,"names":["NoteContext","useState","jsx","_jsx","NoteState","props","host","notesinitial","notes","setNotes","getnotes","response","fetch","concat","method","headers","localStorage","getItem","json","error","showAlert","console","log","addnote","title","description","tag","body","JSON","stringify","note","alert","deletenote","id","newnotes","filter","_id","updatenote","newNotes","parse","index","length","element","Provider","value","children"],"sources":["C:/Users/Nitin Patil/OneDrive/Desktop/reactjs/inotebook/Client-site/src/context/NoteState.js"],"sourcesContent":["import NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\n\nconst NoteState = (props) => {\n  const host = \"http://localhost:5000\";\n  const notesinitial = [];\n  const [notes, setNotes] = useState(notesinitial);\n\n  // Get all Notes\n  const getnotes = async () => {\n    // API call\n    try {\n      const response = await fetch(`${host}/api/notes/fetchallnotes/`, {\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"auth-token\":localStorage.getItem('token'),\n        },\n      });\n      const json = await response.json();\n      setNotes(json);\n      // props.showAlert( json.length===0?'No Notes to Display':'All Notes Fetched','success')\n    } catch (error) {\n      props.showAlert(\"Error in Fetchung Notes\",\"danger\");\n      console.log(error, \": Failed to Fetch API\");\n    }\n  };\n\n  // Add Note\n  const addnote = async (title, description, tag) => {\n    // API call\n    try {\n      const response = await fetch(`${host}/api/notes/addnotes/`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"auth-token\":localStorage.getItem('token'),\n        },\n        body: JSON.stringify({ title, description, tag }),\n      });\n      const note =await response.json();\n      //  Logic for Adding Notes\n      setNotes(notes.concat(note));\n      props.showAlert(\"Added New Note\",\"success\")\n    } catch (error) {\n      alert(\"Error in Adding Note\");\n      console.log(error, \": Failed to Fetch API\");\n    }\n    \n  };\n\n  // delete Note\n  const deletenote = async (id) => {\n    // API call\n    try {\n      const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"auth-token\":localStorage.getItem('token'),\n        },\n      });\n      const json =await response.json();\n      console.log(json);\n      props.showAlert(\"Deleted Note from Notes\" ,\"success\")\n    } catch (error) {\n      alert(\"Error in Adding Note\");\n      console.log(error, \": Failed to Fetch API\");\n    }\n    // logic for Deleting Notes \n    console.log(\"Deleting the note with id: \" + id);\n    const newnotes = notes.filter((notes) => {\n      return notes._id !== id;\n    });\n    setNotes(newnotes);\n  };\n\n\n  // Update Note\n  const updatenote = async (id, title, description, tag) => {\n    // API call\n    try {\n      const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"auth-token\":localStorage.getItem('token'),\n        },\n        body: JSON.stringify({ id, title, description, tag }),\n      });\n      const json = await response.json();\n      console.log(json);\n      props.showAlert(\"Updated Existing Note\",\"success\")\n    } catch (error) {\n      alert(\"Error in updating the Note\");\n      console.log(error, \": Failed to Fetch API\");\n    }\n    // Logic for Updating Notes\n    let newNotes = JSON.parse(JSON.stringify(notes))\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    console.log(newNotes)\n    setNotes(newNotes)\n  };\n\n  return (\n    <NoteContext.Provider\n      value={{ notes, setNotes, addnote, deletenote, updatenote, getnotes }}\n    >\n      {props.children}\n    </NoteContext.Provider>\n  );\n};\nexport default NoteState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}